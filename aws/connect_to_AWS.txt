начало работы с  AWS
установка всего для сайта на питоне


подключаемся ксерверу (проверить наме-сервер)
ssh -i "./.ssh/aws_pair_keys.pem" ubuntu@ec2-52-38-24-190.us-west-2.compute.amazonaws.com
ssh -i "./.ssh/aws_pair_keys.pem" ubuntu@ec2-52-37-126-18.us-west-2.compute.amazonaws.com


создаем всякое виртуальное окружение
sudo apt-get install python-virtualenv


--Create a virtual environment named eb-virt:
ubuntu@ip-172-31-18-142:~$ virtualenv ~/eb-virt

--Activate the virtual environment:

~$ source ~/eb-virt/bin/activate
(eb-virt) ~$

--You will see (eb-virt) prepended to your command prompt, indicating that you're in a virtual environment.

--Use pip to install Django by typing:

(eb-virt)~$ pip install django==1.9.2

--To verify that Django has been installed, type:

'''пример'''
(eb-virt)~$ pip freeze
Django==1.9.2
wheel==0.29.0

'''мое'''
(eb-virt)ubuntu@ip-172-31-18-142:~$ pip freeze
Django==1.9.2
argparse==1.2.1
wsgiref==0.1.2


Create a Django Project

Now you are ready to create a Django project and run it on your machine, using the virtual environment.

To generate a Django application

    Activate your virtual environment:

    ~$ source ~/eb-virt/bin/activate

    Use the django-admin startproject command to create a new Django project named ebdjango:

    (eb-virt)~$ django-admin startproject ebdjango

 
'''
(eb-virt)ubuntu@ip-172-31-18-142:~$ source ~/eb-virt/bin/activate
(eb-virt)ubuntu@ip-172-31-18-142:~$ django-admin startproject ebdjango
(eb-virt)ubuntu@ip-172-31-18-142:~$ 
'''

    This command creates a standard Django site named ebdjango with the following directory structure:
   

    ~/ebdjango
      |-- ebdjango
      |   |-- __init__.py
      |   |-- settings.py
      |   |-- urls.py
      |   `-- wsgi.py
      `-- manage.py

Run your Django site locally with manage.py runserver:

(eb-virt) ~$ cd ebdjango

(eb-virt) ~/ebdjango$ python manage.py runserver

Open http://127.0.0.1:8000/ in a web browser to view the site:

'''
(eb-virt)ubuntu@ip-172-31-18-142:~/ebdjango$ python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).

You have unapplied migrations; your app may not work properly until they are applied.
Run 'python manage.py migrate' to apply them.

May 05, 2016 - 08:41:00
Django version 1.9.2, using settings 'ebdjango.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
'''

(eb-virt)ubuntu@ip-172-31-39-80:~/ebdjango$ python manage.py runserver 0.0.0.0:8000


70 down vote 
You can run it for machines in your network by
./manage.py runserver 0.0.0.0:8000
And than you will be able to reach you server from any machine in your network. Just type on other machine in browser http://192.168.0.1:8000 where 192.168.0.1 is IP of you server... and it ready to go....
or in you case: 
1. On machine A in command line ./manage.py runserver 0.0.0.0:8000 
2. Than try in machine B in browser type http://A:8000 
3. Make a sip of beer. 



включить функцию перенаправления
# Uncomment the next line to enable packet forwarding for IPv4
#net.ipv4.ip_forward=1

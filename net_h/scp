все рекурсивно из SourseFolder to TargetFolder
scp -r user@host:'/directory/SourceFolder ' ./TargetFolder/


Copy multiple files from the remote host to your current directory on the local host

    $ scp your_username@remotehost.edu:/some/remote/directory/\{a,b,c\} . 

    $ scp your_username@remotehost.edu:~/\{foo.txt,bar.txt\} .

---
ssh-keygen (/usr/bin/ssh-keygen)

Генератор пар ключей.

---
ssh-keysign (/usr/lib/openssh/ssh-keysign)

Утилита для проверки ключей хостов. Задействуется при использовании аутентификации по хостам (аналогично rsh) вместо проводимой по умолчанию аутентификации по пользователям/паролям.

---
ssh-keyscan (/usr/bin/ssh-keyscan)

Вспомогательная утилита. Позволяет за считанные секунды собрать публичные ключи с других хостов.

---
ssh-agent (/usr/bin/ssh-agent)

Вспомогательная утилита. Поддерживает кэш закрытых ключей. Кэширование позволяет избегать частого ввода пароля для расшифровки ключей перед их использованием.

---
ssh-add (/usr/bin/ssh-add)

Вспомогательная утилита. Добавляет ключи в кэш ssh-agent.

---
Копируем файлы с одного сервера на другой находясь на третем.
-
scp root@192.168.0.1:/home/file1.zip root@192.168.0.2:/home2/

после ввода у вас запросит пароль к удаленным серверам.
root@192.168.0.1’s password:
root@192.168.0.2’s password:

т.е. мы скопируем с одного удаленного сервера (192.168.0.1) файл /home/file1.zip на другой удаленный сервере (192.168.0.2) в папку /home2/
находясь на третем сервере (192.168.0.3). Можно копировать файлы а так же и папки, используя параметр -r

---
Аутентификация пользователя по его публичному ключу.

Данный тип аутентификации может избавить от ввода пароля при подключении к серверу. Аутентификация по публичному ключу основана на проверке соответствия публичного ключа клиента, который размещается на сервере и секретного ключа клиента (пользователя), который расположен у клиента (у пользователя в домашнем каталоге ~/.ssh/id_rsa ). Примерно так же, как клиент проверяет валидность сервера по публичному ключу сервера. Генерация пары ключей осуществляется утилитой ssh-keygen, после чего в каталоге пользователя образуется 2 ключа  ~/.ssh/id_rsa - секретный и  ~/.ssh/id_rsa.pub  - публичный. Публичный ключ помещается на сервер под именем  ~/.ssh/authorized_keys. После этого при подключении к серверу под пользователем, в каталогах которого лежат соответствующие ключи (на клиенте -  ~/.ssh/id_rsa, на сервере -  ~/.ssh/authorized_keys) - нет необходимости вводить пароль. В файле  ~/.ssh/authorized_keys может последовательно содержаться несколько ключей для доступа к данному серверу под данным пользователем с нескольких серверов. Давайте рассмотрим практический пример настройки аутентификации по публичному ключу: